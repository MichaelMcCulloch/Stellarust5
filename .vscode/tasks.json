{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Watch Backend And Trigger",
            "type": "shell",
            "linux": {
                "command": "./.vscode/watch_backend.sh"
            },
            "windows": {
                "command": "cargo watch -c --quiet -d 0 --no-gitignore -x 'check --all' -s 'type '' > .trigger'"
            },
            "options": {
                "cwd": "${workspaceFolder}/"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "presentation": {
                "reveal": "always"
            },
        },
        {
            "label": "Watch Frontend And Trigger",
            "type": "shell",
            "linux": {
                "command": "./.vscode/watch_frontend.sh",
            },
            "windows": {
                "command": "cargo watch --use-shell=powershell -c --quiet -d 0 --no-gitignore --no-ignore  -w .\\frontend\\src\\ -s 'cd frontend; npm run lint; if ($?) {cd .. ; Remove-Item -Path .\\target\\release\\build\\frontend_static_files-* -Recurse -Force -Confirm:$false ; Remove-Item -Path .\\target\\debug\\build\\frontend_static_files-* -Recurse -Force -Confirm:$false ; echo $null >>  .trigger } else { cd .. } ;'  ",
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "presentation": {
                "reveal": "always"
            },
        },
        {
            "label": "Watch Trigger And Build",
            "detail": "Will deploy the production build of stellarust, which can serve it's own client",
            "type": "shell",
            "linux": {
                "command": "./.vscode/watch_trigger.sh"
            },
            "windows": {
                "command": "systemfd --no-pid -s https::0.0.0.0:8000 -- cargo watch -c --quiet --no-gitignore --no-ignore -d 0 -w '.trigger' -x 'run --package backend --bin stellarust --release';"
            },
            "options": {
                "cwd": "${workspaceFolder}/"
            },
            "problemMatcher": [
                "$rustc"
            ],
            "presentation": {
                "reveal": "always"
            },
        },
        {
            "label": "Deploy Stellarust In Production Mode With Automagic Redeployement",
            "dependsOn": [
                "Watch Backend And Trigger",
                "Watch Frontend And Trigger",
                "Watch Trigger And Build",
            ],
            "dependsOrder": "parallel",
            "group": {
                "kind": "build",
            }
        },
        {
            "label": "Deploy Stellarust In Production Mode With Automagic Redeployement With Script",
            "linux": {
                "type": "process",
                "command": "${workspaceFolder}/.vscode/monitor.sh",
            },
            "windows": {
                "type": "shell",
                "command": "${workspaceFolder}/.vscode/monitor.ps1"
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Install Typescript Deps",
            "type": "shell",
            "command": "npm install ",
            "options": {
                "cwd": "${workspaceFolder}/frontend",
            },
        },
        {
            "label": "Debug HTTPS Client",
            "type": "shell",
            "command": "npm start",
            "group": "build",
            "linux": {
                "options": {
                    "env": {
                        "SSL_CRT_FILE": "${STELLARUST_CERT}",
                        "SSL_KEY_FILE": "${STELLARUST_KEY}"
                    }
                }
            },
            "windows": {
                "options": {
                    "env": {
                        "SSL_CRT_FILE": "${env:STELLARUST_CERT}",
                        "SSL_KEY_FILE": "${env:STELLARUST_KEY}"
                    }
                }
            },
            "options": {
                "cwd": "${workspaceFolder}/frontend",
                "env": {
                    "HTTPS": "true",
                }
            },
        },
        {
            "label": "Debug HTTP Client",
            "type": "shell",
            "command": "npm start",
            "group": "build",
            "options": {
                "cwd": "${workspaceFolder}/frontend",
                "env": {
                    "HTTPS": "false",
                }
            },
        }
    ]
}